# Copy this into your shell. 
# Now, every time you run 'zz', your git sandbox will be recreated. 
function zz(){
  d=sgsb_practice_dir; r=project; cm='commit msg'
  #0. Setup Repo
  cd; rm -rf $d; mkdir $d; cd $d; git init $r; cd $r; #init dir and repo      

  #1. Some commits on master
  touch master_file; git add .;  
  for var in {1..4}; do echo "master #$var" >> master_file; git commit -am "$cm #$var (master)"; done;

  #2. branch foo with some commits
  git checkout master; branch=foo; filename=$branch'_file'; git checkout -b $branch; touch $filename; git add .;
  for var in {5..8}; do echo "$branch #$var" >> $filename; git commit -am "$cm #$var ($branch)"; done;

  #3. branch bar with some commits  
  git checkout master; branch=bar; filename=$branch'_file'; git checkout -b $branch; touch $filename; git add .;
  for var in {9..12}; do echo "$branch #$var" >> $filename; git commit -am "$cm #$var ($branch)"; done;
  
  #3.5 conflict with master
  git checkout master; git checkout -b confl; echo "Red Red Red" >> master_file; git commit -am "Red Red Red!";

  #4. Some more commits on master 
  git checkout master;
  for var in {13..16}; do echo "master #$var" >> master_file; git commit -am "$cm #$var (master)"; done;

  #5. new branch cleanly after master
  git checkout master; branch=maz; filename=$branch'_file'; git checkout -b $branch; touch $filename; git add .; 
  for var in {17..20}; do echo "$branch #$var" >> $filename; git commit -am "$branch #$var (master)"; done;
    
  

  # Last: go back to master
  git checkout master;
  clear;
  echo "Sella's Git Sandbox has been Reset. Let's Go Git."
}
